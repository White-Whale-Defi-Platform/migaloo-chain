syntax = "proto3";
package migaloo.feeburn.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "migaloo/feeburn/v1/params.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/White-Whale-Defi-Platform/migaloo-chain/v3/x/feeburn/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/migaloo/feeburn/v1/params";
  }
  // TotalFeeBurn returns the total fee burn.
  rpc TotalFeeBurn(QueryTotalFeeBurnRequest) returns (QueryTotalFeeBurnResponse) {
    option (google.api.http).get = "/migaloo/feeburn/v1/total_fee_burn";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

// QueryTotalFeeBurn is the request type for the Query/TotalFeeBurn RPC method.
message QueryTotalFeeBurnRequest {}

// QueryTotalFeeBurnResponse is the response type for the Query/TotalFeeBurn RPC method.
message QueryTotalFeeBurnResponse {
  cosmos.base.v1beta1.DecCoin total_fee_burn = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"
  ];
}